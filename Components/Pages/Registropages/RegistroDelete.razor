@page "/Registro/Delete/{AporteId:int}"
@using JimmyConcepcion_P1_AP1.Services;
@using JimmyConcepcion_P1_AP1.Models
@using JimmyConcepcion_P1_AP1.DAL;
@inject RegistroServices registroServices
@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>Eliminar Registro</PageTitle>

@if (registro != null)
{
    <div class="container">
        <div class="card shadow-lg border-0 rounded">
            <div class="card-header bg-danger text-white text-center py-2 rounded">
                <h3 class="mb-0"><strong>Eliminar Registro</strong></h3>
            </div>
            <div class="card-body">
                <p>¿Estás seguro que deseas eliminar el siguiente registro?</p>
                <ul class="list-unstyled">
                    <li><strong>ID:</strong> @registro.AporteId</li>
                    <li><strong>Nombre:</strong> @registro.Persona</li>
                    <li><strong>Monto:</strong> @registro.Monto</li>
                </ul>
            </div>
            <div class="card-footer d-flex justify-content-between">
                <button type="button" class="btn btn-outline-secondary" @onclick="Volver">
                    <i class="bi bi-arrow-left-circle"></i> Volver
                </button>
                <button type="button" class="btn btn-outline-danger" @onclick="EliminarRegistro">
                    <i class="bi bi-trash"></i> Eliminar
                </button>
            </div>
        </div>
    </div>
}
else
{
    <div class="container">
        <div class="alert alert-warning text-center" role="alert">
            <strong>registro no encontrada.</strong>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }
    public Registro? registro { get; set; }

    protected override async Task OnInitializedAsync()
    {
        registro = await registroServices.Buscar(Id);
        if (registro == null)
        {
            navigationManager.NavigateTo("/Registro/Index");
        }
    }

    private async Task EliminarRegistro()
    {
        if (registro != null)
        {
            var confirmado = await JSRuntime.InvokeAsync<bool>("confirm", new object[] { "¿Estás seguro de eliminar este registro?" });
            if (confirmado)
            {
                var eliminado = await registroServices.Eliminar(registro.AporteId);
                if (eliminado)
                {
                    navigationManager.NavigateTo("/Registro/Index");
                }
                else
                {
                    Console.WriteLine("Error al eliminar el registro.");
                    await JSRuntime.InvokeVoidAsync("alert", "No se pudo eliminar el registro.");
                }
            }
        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Registro/Index");
    }
}
